<html>
<head>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular.min.js"></script>
</head>
<body ng-app="webnotepad" ng-controller="notecontroller">

<div class="row appTitle"  ng-init="initParameter('<%= @note %>', '<%= @label %>')" ng-model="params">

<% if flash[:alert] != nil %>
<div class="alert alert-warning alert-dismissible" id="AlertBox" role="alert" data-dismiss="alert">
        <h4 id="AlertMessage"><%= flash[:alert] %></h4>
</div>
<% end %>

 <h1><center>WebNotepad <p ng-init=" name='World' " ng-repeat="x in checkList">Hello {{x}}!</p></center></h1>
</div>

<div class="row">
  <div class="col-md-2">
    <ul class="list-group">
      <li class="list-group-item" ng-click="initLabel()"><span class="badge">{{notesNumber}}</span>All</li>
      <li class="list-group-item" ng-repeat="x in labels track by $index" ng-click="changeLabel(x)"><span class="badge">{{x.item}}</span>{{x.name}}</li>
      <li class="list-group-item">
        <form class="form" id="newLabelForm">
          <input type="text" class="form-control" id="newLabel" placeholder="new label" ng-model="newlabelname">
          <br> <center><button class="btn btn-default" ng-click="newLabel()">Add</button></center>
        </form>
      </li> 
    </ul>
  </div>
  <div class="col-md-4">

        <div class="row">
          <div class="col-md-5">
            <h4 ng-bind="selectedLabel_Name"></h4>
          </div>
          <div class="col-md-7">
            <div class="row">
              <div class="col-md-6">
                <button class="btn btn-danger" ng-click="deleteLabel()" ng-show="selectedLabel">Delete Label</button>
              </div>
              <div class="col-md-3">
                <div class="dropdown">
                  <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">Tag
                    <span class="caret"></span></button>
                      <ul class="dropdown-menu list-group">
                        <li class="list-group-item" ng-repeat="x in labels track by $index" ng-click="tagLabel(x)">{{x.name}}</li>
                      </ul>
                </div>
              </div>
              <div class="col-md-3">
                <button class="btn btn-default" ng-click="untagLabel()" ng-show="selectedLabel">Untag</button>
              </div>
            </div>
          </div>
        </div>

      <div>
        <ul class="list-group">
              <li class="list-group-item" ng-repeat="x in showingNotes track by $index" ng-click="showNote(x)"><input type="checkbox" ng-click="checkNote(x)" ng-model="x.selected">{{x.subject}}<br>{{x.content}}</li> 
              <li class="list-group-item" ng-hide="showingNotes.length"> No note exist here. </li>
        </ul> 
      </div>

  </div>
  <div class="col-md-6 noteTable">

    <div>
      <form>
       Subject: <br> <div ng-model="curr_eid"></div>
       <input type="text" class="form-control" placeholder="Text input" ng-model="subject"><br>
       Content:<br>
       <textarea class="form-control" row="6" placeholder="Contents input" ng-model="content"></textarea>
       <p ng-model="updatedAt" ng-show="editMode">Last Updated: {{updatedAt}}</p><br>
       <button class="btn btn-default" ng-click="editNote()" ng-show="editMode">Edit</button> <button class="btn btn-danger" ng-click="deleteNote()" ng-show="editMode">Delete</button>
       <button class="btn btn-primary" ng-click="changeCreateMode()" ng-show="editMode">New Memo</button> <button class="btn btn-primary" ng-click="newNote()" ng-hide="editMode">Apply</button>
      </form>
    </div>

  </div>

</div>

<script>
var myApp = angular.module('webnotepad', []);

myApp.controller('notecontroller',function($scope, $http) {

// initialize variables

        $scope.checkList = [];
        $scope.updatedAt = null;

	$scope.notes = [];
        $scope.notesNumber = 0;
        $scope.labels = [];
        $scope.curr_eid = null;
        $scope.editMode = false;
        $scope.showingNotes = [];

        $scope.selectedLabel = 0;
        $scope.selectedLabel_Name = "All";

        $http.get('/notes/read').then(function(response) {
          $scope.notes = response.data;
          $scope.showingNotes = $scope.notes;
          $scope.notesNumber = $scope.notes.length;
          $scope.setZeroNotes();
          $scope.doParameter();
        });

        $http.get('/labels/read').then(function(response) {
          $scope.labels = response.data;
          $scope.doParameter();
        });

        $scope.doParameter = function() {

          if($scope.params.note != null && $scope.params.note != 0){
            var i;
            for(i = 0; i < $scope.notes.length; i++) {
              if($scope.params.note == $scope.notes[i].eid){
                $scope.showNote($scope.notes[i]);
                break;
              }
            }
          }

          if($scope.params.label != null && $scope.params.label != 0){
            var i;
            for(i = 0; i < $scope.labels.length; i++) {
              if($scope.params.label == $scope.labels[i].eid){
                $scope.selectedLabel = $scope.labels[i].eid;
                $scope.selectedLabel_Name = $scope.labels[i].name;
                $scope.getNotesFromLabel($scope.labels[i].eid);
                break;
              }
            }
          }
        };

	$scope.initParameter = function(note, label) {
		$scope.params = { note : note, label : label };
        };

//From here, history part

        $scope.pushHistory =  function(pLabel,pNote) { 
          var tLabel = { eid : 0 };
          var tNote = {eid : 0 };

          if(pLabel != null) {
            tLabel = pLabel;
            if($scope.curr_eid != null) {
              tNote.eid = $scope.curr_eid;
            }
          }

          if(pNote != null) {
            tNote = pNote;
            if($scope.selectedLabel != null) {
              tLabel.eid = $scope.selectedLabel;
            }
          }

          var state = { selectedLabel: tLabel.eid },
              title = "Page title",
              path  = "/page/index?label=" + tLabel.eid + "&note=" + tNote.eid;
          history.pushState(state, title, path);
        };

        

//From here, handle checklist

        $scope.checkNote = function(pNote) {
          var i, flag = false;
          for(i = 0; i < $scope.checkList.length; i++) {
             if($scope.checkList[i] == pNote.eid) {
               flag = true;
               break;
             }
          }
          if(flag == true) {
            $scope.uncheckNote(i);
          } else {
            $scope.checkList.push(pNote.eid);
          }
        };

        $scope.uncheckNote = function(idx) { 
            $scope.checkList.splice(idx,1);
        };

        $scope.uncheckAll = function() {
            angular.forEach($scope.showingNotes, function (pNote) {
              pNote.selected = false;
            });
            $scope.checkList = [];
        };

//From here, handle Labels

        $scope.makeShowingNotesEmpty = function() {
           $scope.showingNotes = [];
        };

        $scope.getNotesFromLabel = function(label_eid) {
           var i, j, cur_label;
           $scope.makeShowingNotesEmpty();
           for(i = 0; i < $scope.labels.length; i++) {
             if($scope.labels[i].eid == label_eid){
               cur_label = i;
               break;
             }
           }
           for(i = 0; i < $scope.labels[cur_label].notes.length; i++) {
              for(j = 0; j < $scope.notes.length; j++) {
                 if($scope.labels[cur_label].notes[i].eid == $scope.notes[j].eid) {
                    $scope.showingNotes.push($scope.notes[j]);
                    break;
                 }
              }
           }
           $scope.setZeroNotes();
        };

        $scope.setZeroNotes = function() {                 //duplicated
            if ($scope.showingNotes.length == 0) {
               $scope.zeroNotes = true;
            } else {
               $scope.zeroNotes = false;
            }

        };

        $scope.changeLabel = function(pLabel) {
           $scope.uncheckAll();
           $scope.selectedLabel = pLabel.eid;
           $scope.selectedLabel_Name = pLabel.name;
           $scope.getNotesFromLabel(pLabel.eid);
           $scope.setZeroNotes();
           $scope.pushHistory(pLabel,null);
        };

        $scope.initLabel = function() {
           $scope.uncheckAll();
           $scope.selectedLabel = 0;
           $scope.selectedLabel_Name = "All";
           $scope.newlabelname = "";
           $scope.showingNotes = $scope.notes;
           $scope.setZeroNotes();
           $scope.pushHistory({ eid : 0 }, null);
        };

        $scope.deleteLabel = function() {
            var dataObj = {
             id : $scope.selectedLabel
          }

          var res = $http.post('/labels/delete',dataObj);

          res.success(function(data, status, headers, config) {
            var i;
               for(i = 0; i< $scope.labels.length; i++){
                  if ( $scope.labels[i].eid == data.eid ){
                    $scope.labels.splice(i,1);
                    $scope.initLabel();
                    break;
                 }
              }
          });

          res.error(function(data, status, headers, config) {
          });

        };

        $scope.newLabel = function() {
          var dataObj = {
             name : $scope.newlabelname
          }

          var res = $http.post('/labels/create',dataObj);
        
          res.success(function(data, status, headers, config) {
            $scope.labels.push(data);
            $scope.changeLabel(data);
            $scope.newlabelname = "";
          });

          res.error(function(data, status, headers, config) {
          }); 
       };

       $scope.tagLabel = function(pLabel) {
          var dataObj = {
            list : $scope.checkList,
            id : pLabel.eid
          }

          $scope.uncheckAll();

          var res = $http.post('/labels/tagLabel', dataObj);

          res.success(function(data, status, headers, config) {
            var i;
            for (i = 0; i < $scope.labels.length; i++){
              if ($scope.labels[i].eid == data.eid) {
                $scope.labels[i].item = data.item;
                $scope.labels[i].notes = data.notes;
                $scope.getNotesFromLabel($scope.labels[i].eid);
                $scope.changeLabel($scope.labels[i]);
                $scope.checkList = [];
              } 
            }
          });

          res.error(function(data, status, headers, config) {

          });
       };

       $scope.untagLabel = function() {
         var dataObj = {
           list : $scope.checkList,
           id : $scope.selectedLabel
         }

         $scope.uncheckAll();

         var res = $http.post('/labels/untagLabel', dataObj);
         res.success(function(data, status, headers, config) {
            var i, j;
            for (i = 0; i < $scope.labels.length; i++){
              if ($scope.labels[i].eid == data.eid) {
                $scope.labels[i].item = data.item;
                //delete notes id from list
                $scope.labels[i].notes = data.notes;
                $scope.getNotesFromLabel($scope.labels[i].eid);
                $scope.checkList = [];
                break;
              }
            }
         });
       };

// From here, handle Notes

        $scope.changeCreateMode = function() {
          $scope.subject = "";
          $scope.content = "";
          $scope.updatedAt = null;
          $scope.editMode = false;
          $scope.curr_eid = null;
        };

        $scope.newNote = function() {
          var dataObj = {
				subject : $scope.subject,
				content : $scope.content
		}; 
          var res = $http.post('/notes/create', dataObj);
		res.success(function(data, status, headers, config) {
			$scope.notes.push(data);
                        $scope.editMode = true;
                        $scope.curr_eid = data.eid;
                        $scope.updatedAt = data.updatedAt;
                        $scope.notesNumber = $scope.notesNumber + 1;
                        $scope.setZeroNotes();
		});
		res.error(function(data, status, headers, config) {
		});
        };

        $scope.showNote = function(pNote) {
          $scope.subject = pNote.subject;
          $scope.content = pNote.content;
          $scope.updatedAt = pNote.updatedAt;
          $scope.curr_eid = pNote.eid;
          $scope.editMode = true;
          $scope.pushHistory(null,pNote);
        };

        $scope.editNote = function() {
          var dataObj = {
              id : $scope.curr_eid,
              subject : $scope.subject,
              content : $scope.content,
          };

          var res = $http.post('/notes/update',dataObj);
               res.success(function(data, status, headers, config) {
                  var i;
                  for(i=0; i< $scope.notes.length; i++){
                     if ( $scope.notes[i].eid == data.eid ){
                       $scope.notes[i].subject = data.subject;
                       $scope.notes[i].content = data.content;

                       $scope.subject = data.subject;
                       $scope.content = data.content;
                       $scope.updatedAt = data.updatedAt;
                       
                       break;
                     }
                   }
               });
               res.error(function(data, status, headers, config) {
               });
        };

        $scope.deleteNote = function(pNote) {
          var dataObj = {
            id : $scope.curr_eid
          };

          var res = $http.post('/notes/delete',dataObj);
          
          res.success(function(data, status, headers, config) {
             var i, j, pLabel;
             for(i = 0; i < $scope.notes.length; i++){            // update all
                if( $scope.notes[i].eid == data.eid ){
                  $scope.notes.splice(i,1);
                  $scope.changeCreateMode();
                  $scope.notesNumber = $scope.notesNumber - 1;
                  break;
               }
             }
             
             for(i = 0; i < $scope.labels.length; i++){          //update labels 
                for(j = 0; j < $scope.labels[i].notes.length; j++){
                  if($scope.labels[i].notes[j].eid == data.eid){
                    if($scope.labels[i].eid == $scope.selectedLabel){
                      pLabel = $scope.labels[i];
                    }
                    $scope.labels[i].notes.splice(j,1);
                    $scope.labels[i].item = $scope.labels[i].item - 1;
                  }
                }
             }
             console.log(pLabel);
             if(pLabel != null)
               $scope.changeLabel(pLabel);
             $scope.checkList = [];
             $scope.setZeroNotes();
             $scope.curr_eid = null;
             $scope.pushHistory(pLabel,{ eid: 0});
          });
          res.error(function(data, status, headers, config) {
          });

        };

 
});

</script>

</body>
</html>

<style>

textarea {
    resize: none;
    width: 180px;
    height: 800px;
}

.appTitle {
   margin-bottom: 50px;
}

.noteTable {
   padding: 20px;
}

.floatRight {
  float: right;
}

#newLabelForm {
}

</style>
